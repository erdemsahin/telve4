<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:p="http://primefaces.org/ui"
                xmlns:t="http://java.sun.com/jsf/composite/telveComponents"
                template="/layout/primeTemplate.xhtml">

    <ui:param name="showListBar" value="true" />

    <ui:define name="extraHead">
        
        <h:outputStylesheet library="fc" name="css/fullcalendar.css" />
        <ui:remove>
        <h:outputStylesheet library="fc" name="css/fullcalendar.print.css" />
        </ui:remove>
        
        <h:outputScript library="fc" name="js/jquery.min.js" />
        <script type="text/javascript">
            var jQuery2 = $.noConflict(true);
        </script>
        <h:outputScript library="fc" name="js/moment.min.js" />
        <h:outputScript library="fc" name="js/jquery-ui.min.js" />
        <h:outputScript library="fc" name="js/fullcalendar.js" />
        <h:outputScript library="fc" name="js/locale-all.js" />
        
        <style>
            .ui-tooltip{
                position: fixed;
            }
        </style>
        
        <ui:remove>
        <script>
            //Hint'in nasıl çalışacağını değiştirmek istersek :
            if (PrimeFaces.widget.Schedule)
            {

                PrimeFaces.widget.Schedule = PrimeFaces.widget.Schedule.extend(
                        {

                            setupEventHandlers: function () {
                                var $this = this;

                                this.cfg.dayClick = function (dayDate, jsEvent, view) {
                                    if ($this.cfg.behaviors) {
                                        var dateSelectBehavior = $this.cfg.behaviors['dateSelect'];
                                        if (dateSelectBehavior) {
                                            var ext = {
                                                params: [
                                                    {name: $this.id + '_selectedDate', value: dayDate.valueOf() - dayDate.zone() * 60000}
                                                ]
                                            };

                                            dateSelectBehavior.call($this, ext);
                                        }
                                    }
                                };

                                this.cfg.eventClick = function (calEvent, jsEvent, view) {
                                    if (calEvent.url) {
                                        window.open(calEvent.url, $this.cfg.urlTarget);
                                        return false;
                                    }

                                    if ($this.cfg.behaviors) {
                                        var eventSelectBehavior = $this.cfg.behaviors['eventSelect'];
                                        if (eventSelectBehavior) {
                                            var ext = {
                                                params: [
                                                    {name: $this.id + '_selectedEventId', value: calEvent.id}
                                                ]
                                            };

                                            eventSelectBehavior.call($this, ext);
                                        }
                                    }
                                };

                                this.cfg.eventDrop = function (calEvent, delta, revertFunc, jsEvent, ui, view) {
                                    if ($this.cfg.behaviors) {
                                        var eventMoveBehavior = $this.cfg.behaviors['eventMove'];
                                        if (eventMoveBehavior) {
                                            var ext = {
                                                params: [
                                                    {name: $this.id + '_movedEventId', value: calEvent.id},
                                                    {name: $this.id + '_dayDelta', value: delta.days()},
                                                    {name: $this.id + '_minuteDelta', value: (delta._milliseconds / 60000)}
                                                ]
                                            };

                                            eventMoveBehavior.call($this, ext);
                                        }
                                    }
                                };

                                this.cfg.eventResize = function (calEvent, delta, revertFunc, jsEvent, ui, view) {
                                    if ($this.cfg.behaviors) {
                                        var eventResizeBehavior = $this.cfg.behaviors['eventResize'];
                                        if (eventResizeBehavior) {
                                            var ext = {
                                                params: [
                                                    {name: $this.id + '_resizedEventId', value: calEvent.id},
                                                    {name: $this.id + '_dayDelta', value: delta.days()},
                                                    {name: $this.id + '_minuteDelta', value: (delta._milliseconds / 60000)}
                                                ]
                                            };

                                            eventResizeBehavior.call($this, ext);
                                        }
                                    }
                                };

                                if (this.cfg.tooltip) {
                                    this.cfg.eventMouseover = function (event, jsEvent, view) {
                                        console.log('Telve Override');
                                        if (event.description) {
                                            $this.tipTimeout = setTimeout(function () {
                                                $this.tip.css({
                                                    'left': jsEvent.pageX,
                                                    'top': jsEvent.pageY + 15,
                                                    'z-index': ++PrimeFaces.zindex
                                                })
                                                        .html(event.description)
                                                        .show();
                                            }, 150);
                                        }
                                    };

                                    this.cfg.eventMouseout = function (event, jsEvent, view) {
                                        if ($this.tipTimeout) {
                                            clearTimeout($this.tipTimeout);
                                        }

                                        if ($this.tip.is(':visible')) {
                                            $this.tip.hide();
                                            $this.tip.text('');
                                        }
                                    };
                                }
                            }
                        });
            }
            
        </script>
            </ui:remove>

        
        

        <script>

        var eventSources = [
            {
                id: 'taskEventSource',
                url: '#{request.contextPath}/rest/calendar/events/taskEventSource.fc', 
                color: '#f39c12'
            }, 
            {
                id: 'taskEventSource2',
                events: [
                    {
					title: 'All Day Event',
					start: '2017-02-01'
				},
				{
					title: 'Long Event',
					start: '2017-02-07',
					end: '2017-02-10'
				},
				{
					id: 999,
					title: 'Repeating Event',
					start: '2017-02-09T16:00:00'
				},
				{
					id: 999,
					title: 'Repeating Event',
					start: '2017-02-16T16:00:00'
				},
				{
					title: 'Conference',
					start: '2017-02-11',
					end: '2017-02-13'
				}
                ],
                color: '#dd4b39'
            }
        ]



	jQuery2(document).ready(function() {
		
		jQuery2('#calendar').fullCalendar({
			header: {
				left: 'prev,next today',
				center: 'title',
				right: ''
			},
                        locale: 'tr',
                        aspectRatio: 2,
			//defaultDate: '2017-02-12',
			navLinks: true, // can click day/week names to navigate views
                        navLinkDayClick:'agendaDay',
                        navLinkWeekClick:'agendaWeek',
                        weekNumbers: true,
			editable: false,
			eventLimit: true, // allow "more" link when too many events
                        eventSources: eventSources,
			
                         eventRender: function(event, element) {
                            jQuery(element).popover({
                                title: function () {
                                    return "<B>" + event.title + "</B>";
                                },
                                placement:'auto',
                                html:true,
                                trigger : 'hover',
                                animation : 'false',
                                content: function () {
                                    return "<h1>" + event.description ? event.description : "" + "</h1>";
                                },
                                container:'body'
                            }).popover('show');
                        },
                        eventClick: function(calEvent, jsEvent, view) {

                            alert('Event: ' + calEvent.title);
                            alert('Event: ' + calEvent.source.id);
                            alert('Coordinates: ' + jsEvent.pageX + ',' + jsEvent.pageY);
                            alert('View: ' + view.name);
                            
                            editEvent();
                            

                        }
		});
		
	});


        function monthView(){
            jQuery2('#calendar').fullCalendar('changeView', 'month');
        }
        
        function weekView(){
            jQuery2('#calendar').fullCalendar('changeView', 'agendaWeek');
        }
        
        function dayView(){
            jQuery2('#calendar').fullCalendar('changeView', 'agendaDay');
        }
        
        function listView(){
            jQuery2('#calendar').fullCalendar('changeView', 'listMonth');
        }
        
        function refetchEvents(){
            jQuery2('#calendar').fullCalendar( 'refetchEvents' );
        }
        

</script>
        
    </ui:define>

    <ui:define name="outerspace">
        <ui:remove>
            <ui:include src="/layout/ajaxLoadingPopup.xhtml" />
        </ui:remove>
        <ui:insert name="includes" />


        <p:dialog id="calendarFilterPopup"  header="#{messages['module.caption.CalendarFilterPopup']}" widgetVar="calendarFilterPopup" modal="true" width="420" height="300">

            <h:form id="filterPopup">

                <div class="row">

                    <t:inputAny label="calendar.label.EventSources" columnClass="col-xs-12">

                        <p:selectManyMenu id="advanced" value="#{calendarFilterModel.calendarSources}" 
                                          var="t" filter="true" filterMatchMode="contains" showCheckbox="true">
                            <f:selectItems value="#{calendarFilterModel.getRegisteredEventSources()}" var="es" itemLabel="#{messages[ 'calendar.source.name.'.concat( es ) ]}" itemValue="#{es}" />

                            <p:column>
                                <h:outputText styleClass="" value=" " />
                            </p:column>

                            <p:column>
                                <h:outputText value="#{messages[ 'calendar.source.name.'.concat( t ) ]}" />
                            </p:column>
                        </p:selectManyMenu>

                    </t:inputAny>


                </div>
                <div class="actionButtons" style="position: absolute;  width: 95%; bottom: 18px; padding-right: 18px;" >
                    <p:commandButton id="select" value="#{messages['general.button.Ok']}" icon="ui-icon-check" ajax="true" process="@form" partialSubmit="false" oncomplete="PF('telveCalendar').update();PF('calendarFilterPopup').hide();"/>
                    <p:button id="close" value="#{messages['general.button.Cancel']}" icon="ui-icon-close" onclick="PF('calendarFilterPopup').hide();"/>
                </div>
            </h:form>
        </p:dialog>

    </ui:define>




    <ui:define name="body">


        <ui:include src="/layout/messages.xhtml"/>

        <h:form id="actionForm">
            <p:remoteCommand name="newEvent"  actionListener="#{calendarHome.newEvent}" />
            <p:remoteCommand name="editEvent" actionListener="#{calendarHome.editEvent}" />
        </h:form>

        <div class="box box-primary">
            <div class="box-body no-padding">

                <div id="calendar"/>
                <ui:remove>
                <h:form>
                    <p:schedule id="schedule" value="#{calendarHome.model}" widgetVar="telveCalendar" timeZone="GMT+3" locale="#{localeSelector.getLocaleString()}" rightHeaderTemplate="" tooltip="true" aspectRatio="2" >
                        <p:ajax event="eventSelect" listener="#{calendarHome.onEventSelect}" oncomplete="editEvent();"/>
                        <p:ajax event="viewChange" listener="#{calendarHome.onViewChange}" />
                    </p:schedule>
                </h:form>
                </ui:remove>

            </div>


        </div>




    </ui:define>

    <ui:define name="context-menu">
        <ui:remove>
            <li>
                <p:commandLink id="newEvent"  action="#{calendarHome.newEvent}" >
                    <f:param name="eventSource" value="simpleEventSource" />
                    <h:graphicImage value="/img/ribbon/small/calendar.png" />
                    <span>#{messages['calendar.button.SimpleEvent']}</span>
                </p:commandLink>
            </li>
        </ui:remove>
        <li>
            <a href="#" onclick="monthView();" >
                <h:graphicImage value="/img/ribbon/small/calendar_month.png" />
                <span >#{messages['calendar.button.Month']}</span> 
            </a>
        </li>
        <li>
            <a href="#" onclick="weekView();" >
                <h:graphicImage value="/img/ribbon/small/calendar_week.png" />
                <span >#{messages['calendar.button.Week']}</span> 
            </a>
        </li>
        <li>
            <a href="#" onclick="dayView();" >
                <h:graphicImage value="/img/ribbon/small/calendar_day.png" />
                <span >#{messages['calendar.button.Day']}</span> 
            </a>
        </li>
        <li>
            <a href="#" onclick="listView();" >
                <h:graphicImage value="/img/ribbon/small/calendar_list.png" />
                <span >#{messages['calendar.button.List']}</span> 
            </a>
        </li>

        <ui:remove>
            <li>
                <a href="#" onclick="PF('calendarFilterPopup').show();" >
                    <h:graphicImage value="/img/ribbon/small/calendar_group.png" />
                    <span >#{messages['calendar.button.Filter']}</span> 
                </a>
            </li>
        </ui:remove>

        <li>
            <p:commandLink id="calb1" action="#{calendarFilterModel.toggleShowClosedEvent()}" update="calb1" process="@this" >
                <i class="fa #{calendarFilterModel.showClosedEvents ? 'fa-check-square' : 'fa-square' } " />
                #{messages['calendar.button.ShowClosed']}
                oncomplete="PF('telveCalendar').update();"
            </p:commandLink>
        </li>

        <li>
            <p:commandLink id="calb2" action="#{calendarFilterModel.toggleShowPersonalEvents()}" update="calb2" process="@this" >
                <i class="fa #{calendarFilterModel.showPersonalEvents ? 'fa-check-square' : 'fa-square' } " />
                #{messages['calendar.button.ShowPOT']}
                oncomplete="PF('telveCalendar').update();"
            </p:commandLink>
        </li>
    </ui:define>

    <ui:define name="content-list">
        <div class="box-header">
            <h4 class="box-title">#{messages['calendar.label.EventSources']}</h4>
        </div>

        <ul class="list-group">
            <ui:repeat value="#{calendarFilterModel.getRegisteredEventSources()}" var="es" >
                <li class="list-group-item"> 
                    <p:commandLink action="#{calendarFilterModel.toggleSelectSource(es)}" process="@this" update="@this" oncomplete="refetchEvents();">
                        <i class="fa #{calendarFilterModel.getIsSourceSelected(es) ? 'fa-check-square-o' : 'fa-square-o'}" />
                    </p:commandLink>

                    <h:panelGroup id="cbtn" layout="span">

                        <button class="btn btn-sm #{calendarFilterModel.getSourceStyle(es)} dropdown-toggle" style="width: 14px; height: 16px;" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> 

                        </button>

                        <ui:remove>
                            <a href="#" class="dropdown-toggle #{calendarFilterModel.getSourceStyle(es)}" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="caret"></span>
                            </a>
                        </ui:remove>
                        <ul class="dropdown-menu" >
                            <li><p:commandLink action="#{calendarFilterModel.setSourceStyle(es, 'bg-blue')}"  process="@this" update="cbtn" oncomplete="refetchEvents();">
                                    <i class="fa fa-square text-blue"></i> Mavi
                                </p:commandLink></li>
                            <li><p:commandLink action="#{calendarFilterModel.setSourceStyle(es, 'bg-yellow')}"  process="@this" update="cbtn" oncomplete="refetchEvents();">
                                    <i class="fa fa-square text-yellow"></i> Sarı

                                </p:commandLink></li>
                            <li><p:commandLink action="#{calendarFilterModel.setSourceStyle(es, 'bg-red')}" process="@this" update="cbtn" oncomplete="refetchEvents();">
                                    <i class="fa fa-square text-red"></i> Kırmızı

                                </p:commandLink></li>
                            <li>
                                <p:commandLink action="#{calendarFilterModel.setSourceStyle(es, 'bg-maroon')}" process="@this" update="cbtn" oncomplete="refetchEvents();">
                                    <i class="fa fa-square text-maroon"></i> Bordo

                                </p:commandLink>
                            </li>
                            <li>
                                <p:commandLink action="#{calendarFilterModel.setSourceStyle(es, 'bg-aqua')}" process="@this" update="cbtn" oncomplete="refetchEvents();">
                                    <i class="fa fa-square text-aqua"></i> Auqa

                                </p:commandLink>
                            </li>
                            <li>
                                <p:commandLink action="#{calendarFilterModel.setSourceStyle(es, 'bg-green')}" process="@this" update="cbtn" oncomplete="refetchEvents();">
                                    <i class="fa fa-square text-green"></i> Yeşil

                                </p:commandLink>
                            </li>
                            <li>
                                <p:commandLink action="#{calendarFilterModel.setSourceStyle(es, 'bg-light-blue')}" process="@this" update="cbtn" oncomplete="refetchEvents();">
                                    <i class="fa fa-square text-light-blue"></i> Açık Mavi

                                </p:commandLink>
                            </li>
                            <li>
                                <p:commandLink action="#{calendarFilterModel.setSourceStyle(es, 'bg-orange')}" process="@this" update="cbtn" oncomplete="PF('telveCalendar').update();">
                                    <i class="fa fa-square text-orange"></i> Turuncu

                                </p:commandLink>
                            </li>
                            <li>
                                <p:commandLink action="#{calendarFilterModel.setSourceStyle(es, 'bg-olive')}" process="@this" update="cbtn" oncomplete="PF('telveCalendar').update();">
                                    <i class="fa fa-square text-olive"></i> Zeytuni

                                </p:commandLink>
                            </li>
                            <li>
                                <p:commandLink action="#{calendarFilterModel.setSourceStyle(es, 'bg-purple')}" process="@this" update="cbtn" oncomplete="PF('telveCalendar').update();">
                                    <i class="fa fa-square text-purple"></i> Mor

                                </p:commandLink>
                            </li>
                        </ul>
                    </h:panelGroup>
                    #{messages[ 'calendar.source.name.'.concat( es ) ]} 

                </li>
            </ui:repeat>
        </ul>
    </ui:define>
</ui:composition>